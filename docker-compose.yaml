#docker-compose.yml
#
#Этот файл описывает конфигурацию Docker Compose для приложения, состоящего из трех основных сервисов:
#- db: Сервис базы данных PostgreSQL.
#- redis: Сервис для кэширования и управления данными с использованием Redis.
#- web: Сервис веб-приложения, построенный на Django.
#
#Сервисы взаимодействуют друг с другом через общую сеть (app-network) и используют тома для постоянного хранения данных.
#
#Сервис db:
#  - Использует образ PostgreSQL версии 13.
#  - Настраивает базу данных с именем 'tasks_db', пользователем 'timur' и паролем '123'.
#  - Данные базы данных сохраняются в томе 'postgres_data'.
#
#Сервис redis:
#  - Использует образ Redis версии 6.
#  - Открывает порт 6379 для доступа к Redis.
#  - Данные Redis сохраняются в томе 'redis_data'.
#
#Сервис web:
#  - Строится из текущего контекста (Dockerfile в корне проекта).
#  - Запускает сервер Django на порту 8000.
#  - Подключается к базе данных PostgreSQL и Redis через переменные окружения.
#  - Зависит от сервисов db и redis, что гарантирует их запуск перед запуском веб-приложения.
#  - Использует том для синхронизации кода приложения между хостом и контейнером.
#
#Тома:
#  - postgres_data: Тома для хранения данных PostgreSQL.
#  - redis_data: Тома для хранения данных Redis.
#
#Сети:
#  - app-network: Сеть типа bridge для взаимодействия между сервисами.

version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: tasks_db
      POSTGRES_USER: timur
      POSTGRES_PASSWORD: 123
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app-network

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgres://timur:123@db:5432/tasks_db
      - REDIS_URL=redis://redis:6379/0  # Добавляем переменную для Redis
      - DEBUG=1
      - SECRET_KEY='timur:123'
    depends_on:
      - db
      - redis
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge